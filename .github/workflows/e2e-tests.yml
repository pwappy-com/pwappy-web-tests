name: Scheduled E2E Tests

on:
  schedule:
    # 毎時0分に実行 (Normalテスト用)
    - cron: '0 * * * *'
    # 毎日 UTCの0時0分 (日本時間の午前9時) に実行 (Premiumテスト用)
    - cron: '0 0 * * *'
  # 手動実行も可能にする
  workflow_dispatch:
    inputs:
      test_suite:
        description: '実行するテストスイートを選択'
        required: true
        default: 'normal'
        type: choice
        options:
          - normal
          - premium
          - all

jobs:
  # --- Normalプランのテスト (1時間に1回) ---
  normal-test:
    # ワークフローが `schedule` でトリガーされ、かつ現在の時（hour）が0でない場合に実行
    # `github.event.schedule` は cron の文字列
    if: github.event_name == 'schedule' && github.event.schedule != '0 0 * * *'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tests repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Normal tests
        run: npx playwright test tests/specs/normal
        # `continue-on-error: true` でテストが失敗しても後続のクリーンアップは実行
        continue-on-error: true 
        env:
          PWAPPY_TEST_BASE_URL: ${{ secrets.PWAPPY_TEST_BASE_URL }}
          PWAPPY_TEST_AUTH: ${{ secrets.PWAPPY_TEST_AUTH }}
          PWAPPY_TEST_IDENT_KEY: ${{ secrets.PWAPPY_TEST_IDENT_KEY }}
          PWAPPY_LOGIN: ${{ secrets.PWAPPY_LOGIN }}

      - name: Run Cleanup Script (after Normal)
        # `if: always()` で、先行ステップが失敗しても必ず実行
        if: always()
        run: npx playwright test tests/tools/a0-cleanup-all-apps.spec.ts
        env:
          PWAPPY_TEST_BASE_URL: ${{ secrets.PWAPPY_TEST_BASE_URL }}
          PWAPPY_TEST_AUTH: ${{ secrets.PWAPPY_TEST_AUTH }}
          PWAPPY_TEST_IDENT_KEY: ${{ secrets.PWAPPY_TEST_IDENT_KEY }}
          PWAPPY_LOGIN: ${{ secrets.PWAPPY_LOGIN }}


  # --- Premiumプランのテスト (1日に1回) ---
  premium-test:
    # ワークフローが `schedule` でトリガーされ、かつcronが毎日実行のものである場合に実行
    if: github.event_name == 'schedule' && github.event.schedule == '0 0 * * *'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tests repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Premium tests
        run: npx playwright test tests/specs/premium
        continue-on-error: true
        env:
          PWAPPY_TEST_BASE_URL: ${{ secrets.PWAPPY_TEST_BASE_URL }}
          PWAPPY_TEST_AUTH: ${{ secrets.PWAPPY_TEST_AUTH }}
          PWAPPY_TEST_IDENT_KEY: ${{ secrets.PWAPPY_TEST_IDENT_KEY }}
          PWAPPY_LOGIN: ${{ secrets.PWAPPY_LOGIN }}

      - name: Run Cleanup Script (after Premium)
        if: always()
        run: npx playwright test tests/tools/a0-cleanup-all-apps.spec.ts
        env:
          PWAPPY_TEST_BASE_URL: ${{ secrets.PWAPPY_TEST_BASE_URL }}
          PWAPPY_TEST_AUTH: ${{ secrets.PWAPPY_TEST_AUTH }}
          PWAPPY_TEST_IDENT_KEY: ${{ secrets.PWAPPY_TEST_IDENT_KEY }}
          PWAPPY_LOGIN: ${{ secrets.PWAPPY_LOGIN }}


  # --- 手動実行用のジョブ ---
  manual-test:
    # ワークフローが `workflow_dispatch` でトリガーされた場合のみ実行
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tests repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run selected test suite
        # 手動実行時に選択されたスイートに応じてテストパスを決定
        run: |
          if [ "${{ github.event.inputs.test_suite }}" = "normal" ]; then
            npx playwright test tests/specs/normal
          elif [ "${{ github.event.inputs.test_suite }}" = "premium" ]; then
            npx playwright test tests/specs/premium
          else
            npx playwright test
          fi
        continue-on-error: true
        env:
          PWAPPY_TEST_BASE_URL: ${{ secrets.PWAPPY_TEST_BASE_URL }}
          PWAPPY_TEST_AUTH: ${{ secrets.PWAPPY_TEST_AUTH }}
          PWAPPY_TEST_IDENT_KEY: ${{ secrets.PWAPPY_TEST_IDENT_KEY }}
          PWAPPY_LOGIN: ${{ secrets.PWAPPY_LOGIN }}

      - name: Run Cleanup Script (after Manual)
        if: always()
        run: npx playwright test tests/tools/a0-cleanup-all-apps.spec.ts
        env:
          PWAPPY_TEST_BASE_URL: ${{ secrets.PWAPPY_TEST_BASE_URL }}
          PWAPPY_TEST_AUTH: ${{ secrets.PWAPPY_TEST_AUTH }}
          PWAPPY_TEST_IDENT_KEY: ${{ secrets.PWAPPY_TEST_IDENT_KEY }}
          PWAPPY_LOGIN: ${{ secrets.PWAPPY_LOGIN }}
