name: Multi-OS E2E Tests

on:
  schedule:
    # 毎時0分に実行 (Normalテスト用)
    # UTCの17, 18, 19時 (JSTの2, 3, 4時台) を除外
    - cron: '0 0-16,20-23 * * *'
    # 毎日 UTCの0時0分 (日本時間の午前9時) に実行 (Premiumテスト用)
    - cron: '0 0 * * *'
  # 手動実行も可能にする
  workflow_dispatch:
    inputs:
      test_suite:
        description: '実行するテストスイートを選択'
        required: true
        default: 'normal'
        type: choice
        options:
          - normal
          - premium
          - all

jobs:
  e2e-test:
    # 各OSでジョブを並列実行する
    strategy:
      # 1つのOSで失敗しても他のOSのテストは続行する
      fail-fast: false
      matrix:
        # ここで実行したいOSを指定
        os: [ubuntu-latest, macos-latest, windows-latest]
      max-parallel: 1
        
    # matrixで指定されたOS上で実行
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout tests repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        # WindowsのPowerShellでもnpm installが実行されるように
        shell: bash
        run: npm install

      - name: Install Playwright Browsers
        shell: bash
        run: npx playwright install --with-deps

      # どのテストスイートを実行するかを決定するステップ
      - name: Determine Test Suite
        id: get_suite
        shell: bash
        run: |
          # スケジュール実行の場合
          if [ "${{ github.event_name }}" == "schedule" ]; then
            if [ "${{ github.event.schedule }}" == "0 0 * * *" ]; then
              echo "SUITE_NAME=premium" >> $GITHUB_ENV
              echo "TEST_PATH=tests/specs/premium" >> $GITHUB_ENV
            else
              echo "SUITE_NAME=normal" >> $GITHUB_ENV
              echo "TEST_PATH=tests/specs/normal" >> $GITHUB_ENV
            fi
          # 手動実行の場合
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            SUITE="${{ github.event.inputs.test_suite }}"
            echo "SUITE_NAME=$SUITE" >> $GITHUB_ENV
            if [ "$SUITE" == "normal" ]; then
              echo "TEST_PATH=tests/specs/normal" >> $GITHUB_ENV
            elif [ "$SUITE" == "premium" ]; then
              echo "TEST_PATH=tests/specs/premium" >> $GITHUB_ENV
            else # "all" の場合
              echo "TEST_PATH=" >> $GITHUB_ENV # pathを空にすると全テストが実行される
            fi
          fi

      - name: Run Playwright tests
        run: npx playwright test ${{ env.TEST_PATH }}
        continue-on-error: true 
        env:
          PWAPPY_TEST_BASE_URL: ${{ secrets.PWAPPY_TEST_BASE_URL }}
          PWAPPY_TEST_AUTH: ${{ secrets.PWAPPY_TEST_AUTH }}
          PWAPPY_TEST_IDENT_KEY: ${{ secrets.PWAPPY_TEST_IDENT_KEY }}
          PWAPPY_LOGIN: ${{ secrets.PWAPPY_LOGIN }}

      - name: Run Cleanup Script
        if: always()
        run: npx playwright test tests/tools/a0-cleanup-all-apps.spec.ts
        env:
          PWAPPY_TEST_BASE_URL: ${{ secrets.PWAPPY_TEST_BASE_URL }}
          PWAPPY_TEST_AUTH: ${{ secrets.PWAPPY_TEST_AUTH }}
          PWAPPY_TEST_IDENT_KEY: ${{ secrets.PWAPPY_TEST_IDENT_KEY }}
          PWAPPY_LOGIN: ${{ secrets.PWAPPY_LOGIN }}
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          # アーティファクト名にOSとスイート名を含めて区別しやすくする
          name: playwright-report-${{ matrix.os }}-${{ env.SUITE_NAME }}-${{ github.run_id }}
          path: test-results/
          retention-days: 7
          if-no-files-found: ignore